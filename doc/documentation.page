---
title: Documentation
in_menu: true
sort_info: 7
---
## Overview

newstile is first and foremost a library for converting text written in a superset of Markdown to
HTML. However, due to its modular architecture it is able to support additional input and output
formats. The following input and output formats are currently supported:

* Input: [newstile](parser/newstile.html) (a superset of Markdown), [html](parser/html.html)
* Output: [HTML](converter/html.html), [LaTeX](converter/latex.html), [newstile](converter/newstile.html)


## Usage

{:ruby: lang='ruby'}

The newstile package provides two ways for using it:

* **As a library**

  newstile uses basically the same API as [RedCloth], [BlueCloth] and [Maruku]:

      require 'newstile'

      puts Newstile::Document.new(text).to_html
  {:ruby}

  The second parameter to the `new` call is an options hash for (de)activating certain features. For
  example, to disable automatic header ID generation, you can do the following:

      puts Newstile::Document.new(text, :auto_ids => false).to_html
  {:ruby}

  The default parser used is `newstile`, however, you can select a different one with the `:input`
  option:

      puts Newstile::Document.new(text, :input => 'html').to_latex
  {:ruby}

  You can also reuse the created document object to produce multiple outputs:

      doc = Newstile::Document.new(text, :input => 'html')
      puts doc.to_html
      puts doc.to_latex
  {:ruby}

  More information on how to use or extend newstile can be found in the [API
  documentation](rdoc/index.html)!

* **As an application**

  Together with the library files a binary called `newstile` is shipped which can be used to convert
  text in any supported format (currently only newstile syntax) to any supported output format (e.g.
  HTML or LaTeX). It either reads from the files specified as the command line arguments or from the
  standard input. For example:

      newstile path/to/newstile/doc/syntax.page

  The input and output formats as well as all available newstile options are supported through
  command line switches.


## Tests

newstile uses various test suites to verify the correct working of the parsers and converters. For
more information, have a look at the [tests document](tests.html).


{include_file: doc/links.markdown}
